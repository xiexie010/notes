/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2017-07-02 14:02:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsps;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\r\n");
      out.write("        \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>完整demo</title>\r\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"/>\r\n");
      out.write("    <script type=\"text/javascript\" charset=\"utf-8\" src=\"");
      out.print(request.getContextPath() );
      out.write("/static/myEdit/ueditor.config.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" charset=\"utf-8\" src=\"");
      out.print(request.getContextPath() );
      out.write("/static/myEdit/ueditor.all.min.js\"> </script>\r\n");
      out.write("    <!--建议手动加在语言，避免在ie下有时因为加载语言失败导致编辑器加载失败-->\r\n");
      out.write("    <!--这里加载的语言文件会覆盖你在配置项目里添加的语言类型，比如你在配置项目里配置的是英文，这里加载的中文，那最后就是中文-->\r\n");
      out.write("    <script type=\"text/javascript\" charset=\"utf-8\" src=\"");
      out.print(request.getContextPath() );
      out.write("/static/myEdit/lang/zh-cn/zh-cn.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <style type=\"text/css\">\r\n");
      out.write("        div{\r\n");
      out.write("            width:100%;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div>\r\n");
      out.write("    <h1>完整demo</h1>\r\n");
      out.write("    <script id=\"editor\" type=\"text/plain\" style=\"width:1024px;height:500px;\"></script>\r\n");
      out.write("</div>\r\n");
      out.write("<div id=\"btns\">\r\n");
      out.write("    <div>\r\n");
      out.write("        <button onclick=\"getAllHtml()\">获得整个html的内容</button>\r\n");
      out.write("        <button onclick=\"getContent()\">获得内容</button>\r\n");
      out.write("        <button onclick=\"setContent()\">写入内容</button>\r\n");
      out.write("        <button onclick=\"setContent(true)\">追加内容</button>\r\n");
      out.write("        <button onclick=\"getContentTxt()\">获得纯文本</button>\r\n");
      out.write("        <button onclick=\"getPlainTxt()\">获得带格式的纯文本</button>\r\n");
      out.write("        <button onclick=\"hasContent()\">判断是否有内容</button>\r\n");
      out.write("        <button onclick=\"setFocus()\">使编辑器获得焦点</button>\r\n");
      out.write("        <button onmousedown=\"isFocus(event)\">编辑器是否获得焦点</button>\r\n");
      out.write("        <button onmousedown=\"setblur(event)\" >编辑器失去焦点</button>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    <div>\r\n");
      out.write("        <button onclick=\"getText()\">获得当前选中的文本</button>\r\n");
      out.write("        <button onclick=\"insertHtml()\">插入给定的内容</button>\r\n");
      out.write("        <button id=\"enable\" onclick=\"setEnabled()\">可以编辑</button>\r\n");
      out.write("        <button onclick=\"setDisabled()\">不可编辑</button>\r\n");
      out.write("        <button onclick=\" UE.getEditor('editor').setHide()\">隐藏编辑器</button>\r\n");
      out.write("        <button onclick=\" UE.getEditor('editor').setShow()\">显示编辑器</button>\r\n");
      out.write("        <button onclick=\" UE.getEditor('editor').setHeight(300)\">设置高度为300默认关闭了自动长高</button>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div>\r\n");
      out.write("        <button onclick=\"getLocalData()\" >获取草稿箱内容</button>\r\n");
      out.write("        <button onclick=\"clearLocalData()\" >清空草稿箱</button>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<div>\r\n");
      out.write("    <button onclick=\"createEditor()\">\r\n");
      out.write("    创建编辑器</button>\r\n");
      out.write("    <button onclick=\"deleteEditor()\">\r\n");
      out.write("    删除编辑器</button>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("    //实例化编辑器\r\n");
      out.write("    //建议使用工厂方法getEditor创建和引用编辑器实例，如果在某个闭包下引用该编辑器，直接调用UE.getEditor('editor')就能拿到相关的实例\r\n");
      out.write("    var ue = UE.getEditor('editor');\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    function isFocus(e){\r\n");
      out.write("        alert(UE.getEditor('editor').isFocus());\r\n");
      out.write("        UE.dom.domUtils.preventDefault(e)\r\n");
      out.write("    }\r\n");
      out.write("    function setblur(e){\r\n");
      out.write("        UE.getEditor('editor').blur();\r\n");
      out.write("        UE.dom.domUtils.preventDefault(e)\r\n");
      out.write("    }\r\n");
      out.write("    function insertHtml() {\r\n");
      out.write("        var value = prompt('插入html代码', '');\r\n");
      out.write("        UE.getEditor('editor').execCommand('insertHtml', value)\r\n");
      out.write("    }\r\n");
      out.write("    function createEditor() {\r\n");
      out.write("        enableBtn();\r\n");
      out.write("        UE.getEditor('editor');\r\n");
      out.write("    }\r\n");
      out.write("    function getAllHtml() {\r\n");
      out.write("        alert(UE.getEditor('editor').getAllHtml())\r\n");
      out.write("    }\r\n");
      out.write("    function getContent() {\r\n");
      out.write("        var arr = [];\r\n");
      out.write("        arr.push(\"使用editor.getContent()方法可以获得编辑器的内容\");\r\n");
      out.write("        arr.push(\"内容为：\");\r\n");
      out.write("        arr.push(UE.getEditor('editor').getContent());\r\n");
      out.write("        alert(arr.join(\"\\n\"));\r\n");
      out.write("    }\r\n");
      out.write("    function getPlainTxt() {\r\n");
      out.write("        var arr = [];\r\n");
      out.write("        arr.push(\"使用editor.getPlainTxt()方法可以获得编辑器的带格式的纯文本内容\");\r\n");
      out.write("        arr.push(\"内容为：\");\r\n");
      out.write("        arr.push(UE.getEditor('editor').getPlainTxt());\r\n");
      out.write("        alert(arr.join('\\n'))\r\n");
      out.write("    }\r\n");
      out.write("    function setContent(isAppendTo) {\r\n");
      out.write("        var arr = [];\r\n");
      out.write("        arr.push(\"使用editor.setContent('欢迎使用ueditor')方法可以设置编辑器的内容\");\r\n");
      out.write("        UE.getEditor('editor').setContent('欢迎使用ueditor', isAppendTo);\r\n");
      out.write("        alert(arr.join(\"\\n\"));\r\n");
      out.write("    }\r\n");
      out.write("    function setDisabled() {\r\n");
      out.write("        UE.getEditor('editor').setDisabled('fullscreen');\r\n");
      out.write("        disableBtn(\"enable\");\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function setEnabled() {\r\n");
      out.write("        UE.getEditor('editor').setEnabled();\r\n");
      out.write("        enableBtn();\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function getText() {\r\n");
      out.write("        //当你点击按钮时编辑区域已经失去了焦点，如果直接用getText将不会得到内容，所以要在选回来，然后取得内容\r\n");
      out.write("        var range = UE.getEditor('editor').selection.getRange();\r\n");
      out.write("        range.select();\r\n");
      out.write("        var txt = UE.getEditor('editor').selection.getText();\r\n");
      out.write("        alert(txt)\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function getContentTxt() {\r\n");
      out.write("        var arr = [];\r\n");
      out.write("        arr.push(\"使用editor.getContentTxt()方法可以获得编辑器的纯文本内容\");\r\n");
      out.write("        arr.push(\"编辑器的纯文本内容为：\");\r\n");
      out.write("        arr.push(UE.getEditor('editor').getContentTxt());\r\n");
      out.write("        alert(arr.join(\"\\n\"));\r\n");
      out.write("    }\r\n");
      out.write("    function hasContent() {\r\n");
      out.write("        var arr = [];\r\n");
      out.write("        arr.push(\"使用editor.hasContents()方法判断编辑器里是否有内容\");\r\n");
      out.write("        arr.push(\"判断结果为：\");\r\n");
      out.write("        arr.push(UE.getEditor('editor').hasContents());\r\n");
      out.write("        alert(arr.join(\"\\n\"));\r\n");
      out.write("    }\r\n");
      out.write("    function setFocus() {\r\n");
      out.write("        UE.getEditor('editor').focus();\r\n");
      out.write("    }\r\n");
      out.write("    function deleteEditor() {\r\n");
      out.write("        disableBtn();\r\n");
      out.write("        UE.getEditor('editor').destroy();\r\n");
      out.write("    }\r\n");
      out.write("    function disableBtn(str) {\r\n");
      out.write("        var div = document.getElementById('btns');\r\n");
      out.write("        var btns = UE.dom.domUtils.getElementsByTagName(div, \"button\");\r\n");
      out.write("        for (var i = 0, btn; btn = btns[i++];) {\r\n");
      out.write("            if (btn.id == str) {\r\n");
      out.write("                UE.dom.domUtils.removeAttributes(btn, [\"disabled\"]);\r\n");
      out.write("            } else {\r\n");
      out.write("                btn.setAttribute(\"disabled\", \"true\");\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    function enableBtn() {\r\n");
      out.write("        var div = document.getElementById('btns');\r\n");
      out.write("        var btns = UE.dom.domUtils.getElementsByTagName(div, \"button\");\r\n");
      out.write("        for (var i = 0, btn; btn = btns[i++];) {\r\n");
      out.write("            UE.dom.domUtils.removeAttributes(btn, [\"disabled\"]);\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function getLocalData () {\r\n");
      out.write("        alert(UE.getEditor('editor').execCommand( \"getlocaldata\" ));\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function clearLocalData () {\r\n");
      out.write("        UE.getEditor('editor').execCommand( \"clearlocaldata\" );\r\n");
      out.write("        alert(\"已清空草稿箱\")\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
